<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.3.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	
	<!-- Enables the Spring MVC @Controller programming model -->
	<!-- annotation 방식을 활성화한다. 없으면 xml방식으로만 등록해야 함 -->
	<!-- Spring MVC 컴포넌트를 어노테이션으로 등록할 수 있도록 허가한다 -->
	<!--  -> @Component, @Controller, @Service, @Repository 처리 가능 -->
	<annotation-driven />
<!-- 	<mvc:annotation-driven/>을 의미 -->
	
	<!-- @Transactional 어노테이션 처리 허가 -->
	<tx:annotation-driven />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" />

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>
	
<!-- 	<context:component-scan base-package="com.test.www, web.controller, dept.controller, dept.service -->
<!-- 	, login.controller, login.service" />  -->
	<!-- MVC패턴의 M과 C에 해당 -->
	<!-- 간소화를 위해 다음과 같이 사용한다 -->
	<context:component-scan base-package="com.test.www, *.controller, *.service" />
	<!-- dept.controller -> @Controller, dept.service -> @Service, dept.Dao -> @Repository인데 -->
	<!-- DAO는 마이바티스에게 맡겼기 때문에 dept.Dao 등록은 X -->
	<!-- dept만 써도 dept.**가 되어 dept.Dao가 포함되어 충돌 발생! -->
	
<!-- 	<context:component-scan base-package="web"> -->
		<!-- web으로 시작하는 하위 경로 중에 .dao로 끝나는 것들을 제외한다 -->
<!-- 		<context:exclude-filter type="regex" expression="*.dao"/> -->
<!-- 	</context:component-scan> -->
	
	<!-- 아래와 같은 형태로 컨트롤러와 서비스의 의존성 관계를 주입할 수 있다 -->
<!-- 	<beans:bean class="web.controller.BoardController" id="boardController"> -->
<!-- 		<beans:constructor-arg ref="boardService" /> -->
<!-- 	</beans:bean> -->
	
<!-- 	<beans:bean class="web.service.face.BoardService" /> -->
	
	<!-- 하지만, 위의 xml방식이 너무 어려워서 요즘은 그냥 annotation이나 java-config 방식을 사용한다 -->
	
	<!-- 이 파일에는 컨트롤러와 뷰, RequestMapping 관련 설정이 들어 있다 -->
	<!-- 이 파일을 수정한 후에는 반드시 서버를 재시작해야 한다 -->
	
</beans:beans>
